# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  branches:
    exclude:
    - '*'

pr:
  autoCancel: 'true'
  branches:
    include:
    - develop 
    exclude:
    - main

pool:
  vmImage: 'ubuntu-latest'
resources:
  repositories:
  - repository: VaultConfig.Bootstrap
    type: git
    endpoint: AzureBuilderConnection
    name: Spectrum/_git/VaultConfig.Bootstrap
    ref: develop
  - repository: VaultConfig.Test
    type: git
    endpoint: AzureBuilderConnection
    name: Spectrum/_git/VaultConfig.Test
    ref: develop
  - repository: VaultConfig.TenantConfig
    type: git
    endpoint: AzureBuilderConnection
    name: Spectrum/_git/VaultConfig.TenantConfig
    ref: develop

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOPATH: '$(system.defaultWorkingDirectory)' # Go workspace path
  modulePath: 'tierceron' # Path to the module's code

steps:
- task: GoTool@0
  inputs:
    version: '1.17.10'
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'
- checkout: VaultConfig.Bootstrap
- checkout: VaultConfig.TenantConfig
- checkout: VaultConfig.Test
- checkout: self
- script: |
    go version
    pwd
    echo $GOBIN
    echo "Mod download"
    go mod download
    echo "Compile start"

    for p in trcconfig trcpub trcinit trcinitp trcx trcxp trcsub; do
      echo Compiling $p
      GOOS=linux GOARCH=amd64 go install -gcflags=-G=0 tierceron/$p
      if [[ ! -f $GOBIN/$p ]] ; then
          echo File $p was not built, aborting.
          exit 1
      fi
    done

    echo Compiling trc-vault-plugin
    GOOS=linux GOARCH=amd64 go build -gcflags=-G=0 -tags "testflow memonly" -o $GOBIN/trc-vault-plugin tierceron/trcvault/plugins/trcdb
    if [[ ! -f $GOBIN/trc-vault-plugin ]] ; then
        echo File trc vault plugin was not built, aborting.
        exit 1
    fi

    echo Compiling api
    GOOS=linux GOARCH=amd64 go install -gcflags=-G=0 tierceron/webapi/apiRouter
    if [[ ! -f $GOBIN/apiRouter ]] ; then
        echo File apiRouter was not built, aborting.
        exit 1
    fi

    echo Compiling conflib
    GOOS=linux GOARCH=amd64 go build -gcflags=-G=0 -buildmode=c-shared -o $GOBIN/nc.so tierceron/configlib
    if [[ ! -f $GOBIN/nc.so ]] ; then
        echo File nc.so was not built, aborting.
        exit 1
    fi

    echo "Compile Complete"
    cp $GOBIN/trc* $(Build.ArtifactStagingDirectory)
    cp $GOBIN/apiRouter $(Build.ArtifactStagingDirectory)
    cp $GOBIN/nc.so $(Build.ArtifactStagingDirectory)
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
