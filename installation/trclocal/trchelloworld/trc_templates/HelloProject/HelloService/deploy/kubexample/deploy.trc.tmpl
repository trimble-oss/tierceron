#!/bin/bash

{{.deploy_comment}}trcpub
{{.deploy_comment}}trcconfig -env={{or .deploy_ENVIRONMENT "$KUBEENV"}}
#TODO: Duplicate certs output on next line because jks file doesn't work with decrypt key.
{{.deploy_comment}}trcconfig -env={{or .deploy_ENVIRONMENT "$KUBEENV"}} -certs

{{.deploy_comment}}ARN=$(kubectl config current-context)
{{.deploy_comment}}kubectl config set-context kafka-{{or .deploy_ENVIRONMENT "$KUBEENV"}} --cluster={{or .deploy_CLUSTER "$ARN"}} --user={{or .deploy_USER "$ARN"}}
kubectl config use-context {{.deploy_CONTEXT}}

#Create config files and secrets
kubectl create secret generic hello-cert --namespace={{or .deploy_NAMESPACE "$KUBENAMESPACE"}} --from-file=hello.crt --dry-run=client -o yaml | kubectl apply -f -
kubectl create secret generic hello-key --namespace={{or .deploy_NAMESPACE "$KUBENAMESPACE"}} --from-file=hellokey.key --dry-run=client -o yaml | kubectl apply -f -
kubectl create configmap hello-application-config --namespace={{or .deploy_NAMESPACE "$KUBENAMESPACE"}} --from-file=config.yml --dry-run=client -o yaml | kubectl apply -f -

kubectl apply -f deploy/deployment.yaml --namespace={{or .deploy_NAMESPACE "$KUBENAMESPACE"}}

kubectl rollout restart deployment/hello -n {{or .deploy_NAMESPACE "$KUBENAMESPACE"}}
